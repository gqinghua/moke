server:
  port: 7001

moke:
  nacos:
    server-addr: localhost:8848

spring:
  application:
    name: ums-center
  cloud:
    nacos:
      config:
        server-addr: ${moke.nacos.server-addr}
        file-extension: yml
        #          参数用来配置多个共享配置的Data Id，多个的时候用用逗号分隔
        shared-dataids: application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
        #        参数用来定义哪些共享配置的 Data Id 在配置变化时，应用中可以动态刷新，多个 Data Id 之间用逗号隔开。如果没有明确配置，默认情况下所有共享配置都不支持动态刷新。
        refreshable-dataids: application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
      #        分组设置配置对应的组,没有默认
      #        group: DEFAULT_GROUP
      #        选择命名空间,不配者默认
      #        namespace: 0804283e-ddc8-4fff-b598-d01f0b8c5993
      discovery:
        server-addr: ${moke.nacos.server-addr}
  profiles:
    active: dev

    sentinel:
      transport:
        dashboard: 127.0.0.1:8080

#  配置项参考
#  如果有其它需求，可以参照下表在bootstrap.properties文件中增加配置。
#
#  配置项	                 key	默认值	说明
#  服务端地址	            spring.cloud.nacos.config.server-addr	无	无
#  DataId前缀	            spring.cloud.nacos.config.prefix	${spring.application.name}	Data ID的前缀
#  Group	                spring.cloud.nacos.config.group	DEFAULT_GROUP
#  Data ID后缀及内容文件格式	 spring.cloud.nacos.config.file-extension	properties	Data ID的后缀，同时也是配置内容的文件格式，默认是properties，支持yaml和yml。
#  配置内容的编码方式	    spring.cloud.nacos.config.encode	UTF-8	配置的编码
#  获取配置的超时时间	    spring.cloud.nacos.config.timeout	3000	单位为ms
#  配置的命名空间	        spring.cloud.nacos.config.namespace	常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源隔离等。
#  相对路径	                spring.cloud.nacos.config.context-path	服务端API的相对路径
#  接入点	                spring.cloud.nacos.config.endpoint	UTF-8	地域的某个服务的入口域名，通过此域名可以动态地拿到服务端地址。
#  是否开启监听和自动刷新	    spring.cloud.nacos.config.refresh.enabled	true	默认为true，不需要修改。