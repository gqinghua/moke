package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

##import ${package}.${moduleName}.entity.${className}Entity;
##import ${package}.${moduleName}.service.${className}Service;
##import ${mainPath}.common.utils.PageUtils;
##import ${mainPath}.common.utils.R;
##import  com.moke.common.utils.CommonResult



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${pathName}")
@Api(tags = "${className}Controller", description = "")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @PostMapping(value = "/list")
    @ApiOperation("分页查询")
    public CommonResult list(@RequestBody ${className}Entity ${classname},
                             @RequestParam(value = "pageNum", defaultValue = "1") Integer pageNum,
                             @RequestParam(value = "pageSize", defaultValue = "10") Integer pageSize) {

        CommonResult list = ${classname}Service.list(${classname}, pageNum, pageSize);
        return list;

    }

    /**
    * 增加
    * @param
    * @return
    */
    @ApiOperation("增加")
    @PostMapping(value = "/insert")
    public CommonResult insert(@RequestBody ${className}Entity ${classname}) {
        CommonResult insert = ${classname}Service.insert(${classname});
        return insert;
    }


    /**
     * 修改
     */
    @ApiOperation("更新")
    @PostMapping(value = "/update")
    public CommonResult update(@RequestBody ${className}Entity ${classname}) {
        CommonResult update = ${classname}Service.update(${classname});

        return update;
    }

    /**
     * 删除
     */
    @ApiOperation("删除")
    @GetMapping(value = "/delect")
    public CommonResult delect(Long id) {
        CommonResult delect = ${classname}Service.delect(id);
        return delect;
    }

    @ApiOperation("分页查询")
    @GetMapping(value = "/selectById")
    public CommonResult selectById(Long id){
        CommonResult list = ${classname}Service.selectById(id);
        return list;
    }

}
